package org.rcsb.cif.schema.core;

import org.rcsb.cif.model.*;
import org.rcsb.cif.schema.*;

import javax.annotation.Generated;

/**
 * 
 * The CATEGORY of data items which specify information about the
 * radiation source.
 */
@Generated("org.rcsb.cif.schema.generator.SchemaGenerator")
public class DiffrnSource extends DelegatingCategory.DelegatingCifCoreCategory {
    private static final String NAME = "diffrn_source";

    public DiffrnSource(CifCoreBlock parentBlock) {
        super(NAME, parentBlock);
    }

    /**
     * 
     * Generator current at which the radiation source device was operated.
     * @return FloatColumn
     */
    public FloatColumn getCurrent() {
        return new DelegatingFloatColumn(parentBlock.getColumn(NAME + "_current"));
    }

    /**
     * 
     * The general class of the source of radiation. This is deprecated.
     * Use _diffrn_source.device and _diffrn_source.details.
     * @return StrColumn
     */
    public StrColumn getDescription() {
        return new DelegatingStrColumn(parentBlock.getColumn(NAME + "_description"));
    }

    /**
     * 
     * A description of special aspects of the source.
     * @return StrColumn
     */
    public StrColumn getDetails() {
        return new DelegatingStrColumn(parentBlock.getColumn(NAME + "_details"));
    }

    /**
     * 
     * Enumerated code for the device providing the source of radiation.
     * @return StrColumn
     */
    public StrColumn getDevice() {
        return new DelegatingStrColumn(parentBlock.getColumn(NAME + "_device"));
    }

    /**
     * 
     * Description of the make, model or name of the source device.
     * @return StrColumn
     */
    public StrColumn getMake() {
        return new DelegatingStrColumn(parentBlock.getColumn(NAME + "_make"));
    }

    /**
     * Generator power at which the radiation source device was operated.
     * @return FloatColumn
     */
    public FloatColumn getPower() {
        return new DelegatingFloatColumn(parentBlock.getColumn(NAME + "_power"));
    }

    /**
     * 
     * Description of the collimated source beam as viewed from the sample.
     * @return StrColumn
     */
    public StrColumn getSize() {
        return new DelegatingStrColumn(parentBlock.getColumn(NAME + "_size"));
    }

    /**
     * 
     * The complement of the angle in degrees between the normal
     * to the surface of the X-ray tube target and the primary
     * X-ray beam for beams generated by traditional X-ray tubes.
     * @return FloatColumn
     */
    public FloatColumn getTakeOffAngle() {
        return new DelegatingFloatColumn(parentBlock.getColumn(NAME + "_take_off_angle"));
    }

    /**
     * 
     * Chemical element symbol for the radiation source target (usually
     * the anode). This can be used also for spallation sources.
     * @return StrColumn
     */
    public StrColumn getTarget() {
        return new DelegatingStrColumn(parentBlock.getColumn(NAME + "_target"));
    }

    /**
     * 
     * Generator voltage at which the radiation source device was operated.
     * @return FloatColumn
     */
    public FloatColumn getVoltage() {
        return new DelegatingFloatColumn(parentBlock.getColumn(NAME + "_voltage"));
    }
}
